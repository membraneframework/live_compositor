[package]
name = "live_compositor"
version = "0.1.0"
edition = "2021"
license = "BUSL-1.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
members = [
    "compositor_render",
    "compositor_pipeline",
    "compositor_chromium",
    "integration_tests",
    "generate",
    "decklink",
    "compositor_api",
    "compositor_web",
]
resolver = "2"

[features]
default = ["web_renderer"]
decklink = ["compositor_api/decklink"]
web_renderer = ["dep:compositor_chromium", "compositor_api/web_renderer"]

[workspace.dependencies]
live_compositor = { path = "." }
compositor_api = { path = "compositor_api" }
compositor_pipeline = { path = "compositor_pipeline" }
compositor_chromium = { path = "compositor_chromium" }
compositor_render = { path = "compositor_render" }
bytes = "1.4.0"
serde_json = { version = "1.0.99", features = ["preserve_order"] }
serde = { version = "1.0.164", features = ["derive", "rc"] }
log = "0.4.19"
thiserror = "1.0.40"
crossbeam-channel = "0.5.8"
reqwest = { version = "0.12.3", features = ["blocking", "json"] }
signal-hook = "0.3.15"
ffmpeg-next = "7.0.0"
anyhow = "1.0.71"
image = { version = "0.24.7", features = ["jpeg", "png"] }
rtp = "0.9.0"
rtcp = "0.10.0"
rand = "0.8.5"
tracing = "0.1.40"
socket2 = "0.5.5"
webrtc-util = "0.8.0"
opus = "0.3.0"
rubato = "0.15.0"
futures-util = "0.3.30"
tokio = { version = "1", features = ["full"] }
wgpu = { version = "0.19.1", features = ["naga-ir"] }
schemars = { git = "https://github.com/membraneframework-labs/schemars", rev = "a5ad1f9", features = [
    "preserve_order",
] }

[dependencies]
compositor_api = { workspace = true }
compositor_render = { workspace = true }
compositor_pipeline = { workspace = true }
compositor_chromium = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
bytes = { workspace = true }
tiny_http = "0.12.0"
ffmpeg-next = { workspace = true }
crossbeam-channel = { workspace = true }
log = { workspace = true }
signal-hook = { workspace = true }
fs_extra = "1.3.0"
schemars = { workspace = true }
image = { workspace = true }
thiserror = { workspace = true }
rtp = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
libc = "0.2.151"
webrtc-util = { workspace = true }
rand = { workspace = true }
reqwest = { workspace = true }
rubato = { workspace = true }
tokio = { workspace = true }
axum = { version = "0.7.4", features = ["ws"] }
futures-util = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
shared_memory = { version = "0.12.4", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wgpu = { version = "0.19.1", features = [
    "naga-ir",
    "webgl",
    "fragile-send-sync-non-atomic-wasm", # ðŸ’€
] }

[[bin]]
name = "process_helper"
path = "src/bin/process_helper/main.rs"
required-features = ["web_renderer"]
